{"version":3,"sources":["App.js","sounds/notif.wav","index.js"],"names":["socket","CONNECTION_PORT","App","useSound","boopSfx","play","useState","loggedIn","setLoggedIn","username","setUsername","room","setRoom","message","setMessage","messageList","setMessageList","inputRef","useRef","useEffect","io","window","scrollTo","left","top","document","body","scrollHeight","behavior","sendMessage","a","messageContent","content","author","emit","current","value","on","data","className","map","val","key","type","id","placeholder","ref","onKeyDown","e","code","onChange","target","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"iIAKIA,E,0FCLW,MAA0B,kC,ODMnCC,EAAkB,+BAgITC,MA9Hf,WAEE,MAAeC,YAASC,GAAjBC,EAAP,oBAGA,EAA+BC,oBAAS,GAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAuBJ,mBAAS,IAAhC,mBAAOK,EAAP,KAAYC,EAAZ,KAGA,EAA6BN,mBAAS,IAAtC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAqCR,mBAAS,IAA9C,mBAAOS,EAAP,KAAmBC,EAAnB,KAGMC,EAAWC,mBAGjBC,qBAAU,WACRnB,EAASoB,YAAGnB,KAEZ,CAACA,IAGHkB,qBAAU,WACRE,OAAOC,SAAS,CAAEC,KAAM,EAAGC,IAAKC,SAASC,KAAKC,aAAcC,SAAU,WACtEvB,MACA,CAACU,IAGH,IAUMc,EAAW,uCAAG,4BAAAC,EAAA,6DACdC,EAAiB,CACnBpB,KAAKA,EACLqB,QAAQ,CACNC,OAAOxB,EACPI,QAAQA,IALM,SAQZb,EAAOkC,KAAK,eAAeH,GARf,OASlBf,EAAe,GAAD,mBAAKD,GAAL,CAAiBgB,EAAeC,WAC9ClB,EAAW,IACXG,EAASkB,QAAQC,MAAQ,GAXP,2CAAH,qDAoBjB,OALAjB,qBAAU,WACRnB,EAAOqC,GAAG,kBAAiB,SAACC,GAC1BtB,EAAe,GAAD,mBAAKD,GAAL,CAAiBuB,WAIjC,qBAAKC,UAAU,MAAf,SACIhC,EAqBA,sBAAKgC,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,4CAAe5B,KACf,4BAGF,qBAAK4B,UAAU,aAAf,SAEGxB,EAAYyB,KAAI,SAACC,EAAIC,GAAL,OAEf,qBAAKH,UAAU,UAAf,SACI,qBAAcA,UAAWE,EAAIR,SAAWxB,EAAW,YAAc,eAAjE,UACGgC,EAAIR,SAAWxB,EAAY,sBAAM8B,UAAU,eAAhB,SAAgCE,EAAIR,SAAkB,GAClF,sBAAMM,UAAU,iBAAhB,SACGE,EAAI5B,YAHA6B,UAYjB,qBAAKH,UAAU,qBAAf,SACE,sBAAKA,UAAU,WAAf,UACI,uBACAI,KAAK,OACLC,GAAG,iBACHC,YAAY,kBACZC,IAAK7B,EACL8B,UAAW,SAACC,GAAD,MAAgB,UAAXA,EAAEC,KAAmBpB,IAAgB,IACrDqB,SAAU,SAACF,GAAD,OAAKlC,EAAWkC,EAAEG,OAAOf,UAEnC,wBAAQgB,QAASvB,EAAjB,0BApDR,sBAAKU,UAAU,cAAf,UACE,wCACA,uBACEI,KAAK,OACLE,YAAY,gBACZK,SAAU,SAACF,GAAD,OAAKtC,EAAYsC,EAAEG,OAAOf,UAEtC,uBACEO,KAAK,OACLE,YAAY,eACZK,SAAU,SAACF,GAAD,OAAKpC,EAAQoC,EAAEG,OAAOf,UAElC,wBAAQgB,QA9CM,WACpB,IAAMd,EAAO,CACX3B,KAAKA,EACLF,SAASA,GAEXT,EAAOkC,KAAK,YAAYI,GACxB9B,GAAY,IAwCN,wB,ME9EV6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,W","file":"static/js/main.e1561b4f.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\nimport io from \"socket.io-client\"\nimport useSound from 'use-sound';\nimport boopSfx from './sounds/notif.wav';\n\nlet socket;\nconst CONNECTION_PORT = 'chatgobackend.herokuapp.com/'\n\nfunction App() {\n  // sound effect\n  const [play] = useSound(boopSfx);\n\n  // Before login\n  const [loggedIn,setLoggedIn] = useState(false)\n  const [username,setUsername] = useState(\"\")\n  const [room,setRoom] = useState(\"\")\n  \n  // After login\n  const [message,setMessage] = useState({})\n  const [messageList,setMessageList] = useState([])\n\n  // ref for message input to clear the value\n  const inputRef = useRef()\n\n  // Connect To Socket in The Backend\n  useEffect(()=>{\n    socket = io(CONNECTION_PORT)\n    // eslint-disable-next-line \n  },[CONNECTION_PORT])\n\n  // scrool to bottom evry time i got or i send a message\n  useEffect(()=>{\n    window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\n    play()\n  },[messageList])\n  \n  // to join a room \n  const connectToRoom = () => {\n    const data = {\n      room:room,\n      username:username\n    }\n    socket.emit('join_room',data)\n    setLoggedIn(true)\n  }\n\n  // to send a message\n  const sendMessage = async() => {\n    let messageContent = {\n      room:room,\n      content:{\n        author:username,\n        message:message\n      }\n    }\n    await socket.emit(\"send_message\",messageContent)\n    setMessageList([...messageList,messageContent.content])\n    setMessage(\"\")\n    inputRef.current.value = \"\"\n  }\n\n  // recive messages\n  useEffect(()=>{\n    socket.on(\"recive_message\",(data)=>{\n      setMessageList([...messageList,data])\n    })\n  })\n  return (\n    <div className=\"App\">\n      {!loggedIn ? (\n\n        <div className=\"loginHolder\">\n          <h1>CHATGO</h1>\n          <input \n            type=\"text\" \n            placeholder=\"Type Username\"\n            onChange={(e)=>setUsername(e.target.value)} \n          />\n          <input \n            type=\"text\" \n            placeholder=\"Type Room ID\"\n            onChange={(e)=>setRoom(e.target.value)} \n          />\n          <button onClick={connectToRoom}>\n            Join\n          </button>\n        </div>\n\n        )\n      :(\n        <div className=\"allChatHolder\">\n          <div className=\"roomDHolder\">\n            <h3>Room ID : {room}</h3>\n            <span></span>\n          </div>\n          \n          <div className=\"chatHolder\">\n            \n            {messageList.map((val,key)=>(\n\n              <div className=\"Message\">\n                  <h1 key={key} className={val.author === username ? \"myMessage\" : \"otherMessage\"}>\n                    {val.author !== username ? (<span className=\"authorHolder\">{val.author}</span>) : \"\"}\n                    <span className=\"TheMessageText\">\n                      {val.message}\n                    </span>\n                  </h1>\n              </div>\n              \n            ))}\n            \n          </div>\n\n          <div className=\"messageInputHolder\">\n            <div className=\"centerIt\">\n                <input \n                type=\"text\"\n                id=\"messageContent\" \n                placeholder=\"Type Message...\"\n                ref={inputRef}\n                onKeyDown={(e)=>e.code === \"Enter\" ? sendMessage() : \"\"}\n                onChange={(e)=>setMessage(e.target.value)}\n                />\n                <button onClick={sendMessage}>\n                  send\n                </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/notif.8fe3317f.wav\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style/main.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}